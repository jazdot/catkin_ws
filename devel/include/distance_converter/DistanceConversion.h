// Generated by gencpp from file distance_converter/DistanceConversion.msg
// DO NOT EDIT!


#ifndef DISTANCE_CONVERTER_MESSAGE_DISTANCECONVERSION_H
#define DISTANCE_CONVERTER_MESSAGE_DISTANCECONVERSION_H

#include <ros/service_traits.h>


#include <distance_converter/DistanceConversionRequest.h>
#include <distance_converter/DistanceConversionResponse.h>


namespace distance_converter
{

struct DistanceConversion
{

typedef DistanceConversionRequest Request;
typedef DistanceConversionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct DistanceConversion
} // namespace distance_converter


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::distance_converter::DistanceConversion > {
  static const char* value()
  {
    return "f163c2866a2367d94281173af77bbba8";
  }

  static const char* value(const ::distance_converter::DistanceConversion&) { return value(); }
};

template<>
struct DataType< ::distance_converter::DistanceConversion > {
  static const char* value()
  {
    return "distance_converter/DistanceConversion";
  }

  static const char* value(const ::distance_converter::DistanceConversion&) { return value(); }
};


// service_traits::MD5Sum< ::distance_converter::DistanceConversionRequest> should match
// service_traits::MD5Sum< ::distance_converter::DistanceConversion >
template<>
struct MD5Sum< ::distance_converter::DistanceConversionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::distance_converter::DistanceConversion >::value();
  }
  static const char* value(const ::distance_converter::DistanceConversionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::distance_converter::DistanceConversionRequest> should match
// service_traits::DataType< ::distance_converter::DistanceConversion >
template<>
struct DataType< ::distance_converter::DistanceConversionRequest>
{
  static const char* value()
  {
    return DataType< ::distance_converter::DistanceConversion >::value();
  }
  static const char* value(const ::distance_converter::DistanceConversionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::distance_converter::DistanceConversionResponse> should match
// service_traits::MD5Sum< ::distance_converter::DistanceConversion >
template<>
struct MD5Sum< ::distance_converter::DistanceConversionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::distance_converter::DistanceConversion >::value();
  }
  static const char* value(const ::distance_converter::DistanceConversionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::distance_converter::DistanceConversionResponse> should match
// service_traits::DataType< ::distance_converter::DistanceConversion >
template<>
struct DataType< ::distance_converter::DistanceConversionResponse>
{
  static const char* value()
  {
    return DataType< ::distance_converter::DistanceConversion >::value();
  }
  static const char* value(const ::distance_converter::DistanceConversionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DISTANCE_CONVERTER_MESSAGE_DISTANCECONVERSION_H
